const w=(a,e="*")=>{figma.ui.postMessage(a,{origin:e})},F=(a,e,t="*")=>{w({event:a,data:e},t)},b=(a,e,t=!1)=>{const r=s=>{s.event===a&&(e(s),t&&figma.ui&&figma.ui.off("message",r))};figma.ui.on("message",r)};function A(a){if(Array.isArray(a)&&a.length>0&&typeof a[0]=="object"){const e=a[0];if("url"in e&&"filename"in e)return console.log(`🔗 Found image URL: ${e.url}`),{fieldName:e.filename,attachment:e}}return null}function I(a){const e=[];return Object.entries(a).forEach(([t,r])=>{const s=A(r);s&&(console.log(`🖼️ Found image field "${t}":`,s),e.push({fieldName:t,imageUrl:s.attachment.url}))}),e}figma.showUI(__html__,{themeColors:!0,width:400,height:200});console.log("🟢 Mooco Plugin is online");async function $(a){const e=figma.root.children.find(s=>s.name===a);if(e)return console.log(`📄 Found existing page: ${a}`),e;const t=figma.root.children.find(s=>s.name==="Main Template");if(!t)throw new Error("❌ Main Template page not found");const r=t.clone();return r.name=a,console.log(`✨ Created new page from template: ${a}`),r}async function M(a,e){const t=a.findOne(r=>r.type==="FRAME"&&r.name===e);return t?(console.log(`🎯 Found frame: ${e}`),t):(console.warn(`⚠️ Frame not found: ${e}`),null)}function u(a){let e=[];if(a.type==="TEXT"&&e.push(a),"children"in a)for(const t of a.children)e=e.concat(u(t));return e}figma.ui.onmessage=async a=>{if(a.type==="save-credentials")try{await figma.clientStorage.setAsync("airtableToken",a.credentials.airtableToken),await figma.clientStorage.setAsync("airtableBaseId",a.credentials.airtableBaseId),figma.ui.postMessage({type:"credentials-saved"})}catch(e){figma.ui.postMessage({type:"error",message:e.message})}else if(a.type==="get-credentials")try{const e=await figma.clientStorage.getAsync("airtableToken"),t=await figma.clientStorage.getAsync("airtableBaseId");figma.ui.postMessage({type:"credentials-loaded",credentials:{airtableToken:e,airtableBaseId:t}})}catch(e){figma.ui.postMessage({type:"error",message:e.message})}else if(a.type==="fetch-airtable-data")try{const e=await figma.clientStorage.getAsync("airtableToken"),t=await figma.clientStorage.getAsync("airtableBaseId"),r=await fetch(`https://api.airtable.com/v0/${t}/001`,{headers:{Authorization:`Bearer ${e}`}});if(!r.ok)throw new Error(`Airtable API error: ${r.status}`);const s=await r.json(),p=await Promise.all(s.records.map(async h=>{const i={};Object.entries(h.fields).forEach(([f,n])=>{const c=f.toLowerCase().replace(/\s+/g,"");i[c]=n});const g=I(i);if(g.length>0&&(console.log(`📸 Found ${g.length} image fields in record:`,g),i.imageFields=g),i.filename&&i.version){const f=await $(i.filename),n=await M(f,i.version);if(n){const c=u(n);console.log("🔍 Found text layers:",c.map(o=>o.name));for(const o of c){const l=o.name.toLowerCase().replace(/\s+/g,"");if(i[l]!==void 0){console.log(`✏️ Updating layer "${o.name}" with value:`,i[l]),await figma.loadFontAsync({family:o.fontName.family,style:o.fontName.style});const d=i[l].toString().replace(/\\n/g,`
`).replace(/\\r\\n/g,`
`).replace(/\\r/g,`
`);o.characters=d}}if(i.imageFields&&i.imageFields.length>0){console.log(`🎨 Processing images for frame: ${n.name}`);for(const o of i.imageFields)try{console.log(`📥 Importing image from URL: ${o.imageUrl}`);const d=await(await fetch(o.imageUrl)).arrayBuffer(),y=figma.createImage(new Uint8Array(d)),m=figma.createRectangle();m.name=o.fieldName,m.resize(500,500),m.fills=[{type:"IMAGE",scaleMode:"FILL",imageHash:y.hash}],n.appendChild(m),console.log(`✅ Image "${o.fieldName}" imported successfully`)}catch(l){console.error(`❌ Failed to import image "${o.fieldName}":`,l)}}i.textLayers=c.map(o=>({name:o.name,id:o.id,updated:i[o.name.toLowerCase().replace(/\s+/g,"")]!==void 0}))}}return i}));console.log("All records processed:",p),figma.ui.postMessage({type:"airtable-data",data:p})}catch(e){console.error("Error:",e),figma.ui.postMessage({type:"error",message:e.message})}};b("hello",a=>{console.log("code.ts"),alert(`Hello ${a.string}`),F("helloCallback",{result:!0})});
